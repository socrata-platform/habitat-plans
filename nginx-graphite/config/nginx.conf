daemon off;
worker_processes {{cfg.worker_processes}};

error_log {{pkg.svc_var_path}}/error.log error;
pid {{pkg.svc_var_path}}/nginx.pid;

events {
  worker_connections 4096;
}

worker_rlimit_nofile 4096;

http {
  include {{pkg.svc_config_path}}/mime.types;
  default_type application/octet-stream;

  # standard combined log format up until http_user_agnet, with extra stuff after
  log_format custom '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent" $request_length $request_time "$http_host" '
                    '"$http_X_Socrata_RequestId" "$http_X_App_Token" "$ssl_protocol" "$ssl_cipher" '
                    '"$upstream_http_X_Socrata_RequestId"';


  access_log {{pkg.svc_var_path}}/access.log custom;
  error_log {{pkg.svc_var_path}}/http-error.log;

  server_tokens off;

  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;

  # reduces uneeded ssl handshakes
  ssl_session_cache shared:SSL:10m;
  ssl_session_timeout 10m;

  # Set up a principled connection upgrade variable.
  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  keepalive_timeout 65;

  gzip on;
  gzip_http_version 1.0;
  gzip_comp_level 2;
  gzip_proxied any;
  gzip_types application/javascript application/json application/pdf application/rdf+xml application/rss+xml application/vnd.geo+json application/vnd.ms-excel application/x-javascript application/xmlapplication/xml+rss image/bmp image/svg+xml text/css text/csv text/javascript text/plain text/xml;

  server_names_hash_bucket_size 64;

  proxy_max_temp_file_size 0;

  upstream django {
    ip_hash;
    {{#with bind.graphite-web.first as |web| ~}}
    server {{web.sys.ip}}:{{web.cfg.port}};
    {{/with}}
  }

  server {
    listen {{cfg.port}};
    server_name graphite;
    charset utf-8;

    client_body_temp_path {{pkg.svc_var_path}}/client-body;
    proxy_temp_path {{pkg.svc_var_path}}/proxy;
    fastcgi_temp_path {{pkg.svc_var_path}}/fastcgi;
    scgi_temp_path {{pkg.svc_var_path}}/scgi;
    uwsgi_temp_path {{pkg.svc_var_path}}/uwsgi;

    add_header "Access-Control-Allow-Origin" "*";
    add_header "Access-Control-Allow-Credentials" "false";
    add_header "Access-Control-Allow-Methods" "GET, OPTIONS";
    add_header "Access-Control-Allow-Headers" "Authorization, origin, accept";

    # Django admin media.
    location /media/admin/ {
      alias {{pkgPathFor "socrata/graphite-web"}}/lib/python2.7/site-packages/django/contrib/admin/media/;
    }

    # static media.
    location /content/ {
      alias {{pkgPathFor "socrata/graphite-web"}}/webapp/content/;
    }

    # all non-media requests to the Django server.
    location / {
      uwsgi_pass django;
      include {{pkg.svc_config_path}}/uwsgi_params;
    }
  }
}
